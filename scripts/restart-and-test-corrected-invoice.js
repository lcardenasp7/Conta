/**
 * Script para reiniciar el servidor y probar las correcciones de factura
 */

const { spawn } = require('child_process');
const path = require('path');

async function restartAndTestInvoice() {
    console.log('üîÑ Reiniciando servidor con correcciones de factura...');

    try {
        // Ejecutar el script de prueba primero
        console.log('üß™ Ejecutando prueba de factura corregida...');
        
        const testProcess = spawn('node', ['scripts/test-corrected-half-page-invoice.js'], {
            stdio: 'inherit',
            cwd: process.cwd()
        });

        await new Promise((resolve, reject) => {
            testProcess.on('close', (code) => {
                if (code === 0) {
                    console.log('‚úÖ Prueba de factura completada exitosamente');
                    resolve();
                } else {
                    reject(new Error(`Prueba fall√≥ con c√≥digo: ${code}`));
                }
            });
        });

        // Reiniciar el servidor
        console.log('üöÄ Reiniciando servidor...');
        
        const serverProcess = spawn('node', ['restart-server.js'], {
            stdio: 'inherit',
            cwd: process.cwd()
        });

        console.log('‚úÖ Servidor reiniciado con las correcciones aplicadas');
        console.log('');
        console.log('üìã Correcciones implementadas en la factura:');
        console.log('   ‚úì Formato media hoja carta (8.5" x 5.5")');
        console.log('   ‚úì Una sola p√°gina (no m√°s 3 p√°ginas)');
        console.log('   ‚úì QR movido al header junto al n√∫mero de factura');
        console.log('   ‚úì Sin superposici√≥n del nombre con datos de abajo');
        console.log('   ‚úì Precios dentro del margen (no se salen)');
        console.log('   ‚úì Texto del resumen fiscal sin superposici√≥n con l√≠neas');
        console.log('   ‚úì Espaciado optimizado entre todas las secciones');
        console.log('   ‚úì Tama√±os de fuente ajustados para mejor legibilidad');
        console.log('');
        console.log('üåê Servidor disponible en: http://localhost:3000');
        console.log('üìÑ Puedes probar las facturas desde el panel de administraci√≥n');

    } catch (error) {
        console.error('‚ùå Error durante el reinicio:', error);
        process.exit(1);
    }
}

// Ejecutar si se llama directamente
if (require.main === module) {
    restartAndTestInvoice()
        .catch(error => {
            console.error('‚ùå Error:', error);
            process.exit(1);
        });
}

module.exports = restartAndTestInvoice;