#!/usr/bin/env node

/**
 * Script para instalar las nuevas dependencias necesarias
 * para la generaci√≥n de PDFs y carga de archivos
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß Instalando nuevas dependencias...');

try {
    // Instalar dependencias
    console.log('üì¶ Instalando multer para carga de archivos...');
    execSync('npm install multer@1.4.5-lts.1', { stdio: 'inherit' });
    
    console.log('üìÑ Instalando pdfkit para generaci√≥n de PDFs...');
    execSync('npm install pdfkit@0.15.0', { stdio: 'inherit' });
    
    // Crear directorio de uploads si no existe
    const uploadsDir = path.join(__dirname, '../public/uploads');
    if (!fs.existsSync(uploadsDir)) {
        fs.mkdirSync(uploadsDir, { recursive: true });
        console.log('üìÅ Directorio de uploads creado');
    }
    
    // Crear archivo .gitkeep si no existe
    const gitkeepPath = path.join(uploadsDir, '.gitkeep');
    if (!fs.existsSync(gitkeepPath)) {
        fs.writeFileSync(gitkeepPath, '# Directory for uploaded files (logos, documents, etc.)');
        console.log('üìù Archivo .gitkeep creado');
    }
    
    console.log('‚úÖ Dependencias instaladas exitosamente');
    console.log('');
    console.log('üéâ Nuevas funcionalidades disponibles:');
    console.log('   ‚Ä¢ Generaci√≥n de facturas en PDF');
    console.log('   ‚Ä¢ Carga de logo institucional');
    console.log('   ‚Ä¢ Dashboard con categorizaci√≥n de ingresos/egresos');
    console.log('   ‚Ä¢ Actualizaci√≥n en tiempo real del dashboard');
    console.log('');
    console.log('üìã Para usar estas funcionalidades:');
    console.log('   1. Reinicia el servidor: npm start');
    console.log('   2. Ve a Configuraci√≥n > Instituci√≥n para cargar el logo');
    console.log('   3. Las facturas ahora se pueden descargar en PDF');
    console.log('   4. El dashboard muestra categor√≠as de ingresos y gastos');

} catch (error) {
    console.error('‚ùå Error instalando dependencias:', error.message);
    process.exit(1);
}