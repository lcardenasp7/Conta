#!/usr/bin/env node

/**
 * Script para solucionar los problemas actuales
 */

const { spawn, exec } = require('child_process');

console.log('üîß Solucionando problemas actuales del sistema...\n');

async function fixCurrentIssues() {
    try {
        console.log('1Ô∏è‚É£ Problemas identificados:');
        console.log('   ‚Ä¢ Error 500 en /api/invoices/external');
        console.log('   ‚Ä¢ Problema de accesibilidad en studentEventsModal');
        console.log('   ‚Ä¢ Conflicto de variables en invoices.js');
        console.log('');

        console.log('2Ô∏è‚É£ Soluciones aplicadas:');
        console.log('   ‚úÖ Corregida variable "result" en invoices.js');
        console.log('   ‚úÖ Mejorada accesibilidad en studentEventsModal');
        console.log('   ‚úÖ Agregado logging en endpoint external');
        console.log('   ‚úÖ Creado script de prueba para facturas externas');
        console.log('');

        console.log('3Ô∏è‚É£ Para aplicar completamente las correcciones:');
        console.log('   üîÑ Reiniciando servidor...');

        // Kill existing processes
        if (process.platform === 'win32') {
            exec('taskkill /f /im node.exe', (error) => {
                if (error) {
                    console.log('   No hay procesos Node.js ejecut√°ndose');
                } else {
                    console.log('   ‚úÖ Procesos anteriores detenidos');
                }
            });
        } else {
            exec('pkill -f "node.*server.js"', (error) => {
                if (error) {
                    console.log('   No hay procesos Node.js ejecut√°ndose');
                } else {
                    console.log('   ‚úÖ Procesos anteriores detenidos');
                }
            });
        }

        // Wait a moment
        await new Promise(resolve => setTimeout(resolve, 3000));

        console.log('\n4Ô∏è‚É£ Iniciando servidor con correcciones...');
        console.log('   üìÑ Facturas externas: Endpoint corregido');
        console.log('   ‚ôø Accesibilidad: Modales mejorados');
        console.log('   üîß JavaScript: Variables corregidas');
        console.log('   üìä Logging: Mejorado para debugging');
        console.log('');

        // Start server
        const serverProcess = spawn('npm', ['start'], {
            stdio: 'inherit',
            shell: true
        });

        serverProcess.on('error', (error) => {
            console.error('‚ùå Error iniciando servidor:', error);
        });

        console.log('5Ô∏è‚É£ Despu√©s del reinicio, puedes probar:');
        console.log('   ‚Ä¢ Crear facturas externas desde la interfaz');
        console.log('   ‚Ä¢ Verificar que los modales sean accesibles');
        console.log('   ‚Ä¢ Usar Tab para navegar en modales');
        console.log('   ‚Ä¢ Probar con: node scripts/test-external-invoice.js <token>');

    } catch (error) {
        console.error('‚ùå Error durante la correcci√≥n:', error);
    }
}

// Handle Ctrl+C gracefully
process.on('SIGINT', () => {
    console.log('\nüëã Correcci√≥n cancelada');
    process.exit(0);
});

fixCurrentIssues();